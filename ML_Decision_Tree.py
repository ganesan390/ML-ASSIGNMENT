# -*- coding: utf-8 -*-
"""ML-Decision Tree

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16k6s8nGGqlxvuaGUaY1rLLyEBIdYz-Ah
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import confusion_matrix
from sklearn.tree import export_graphviz
import graphviz

df=pd.read_csv("/content/diabetes (1).csv")

df.tail()

df.head()

df.describe()

df.nunique()

df['Age'].unique()

df['BMI'].unique()

plt.bar(df.Age,df.BMI)

plt.plot(df.Age,df.BMI)

plt.scatter(df.Age,df.BMI)
plt.show()

plt.boxplot(df.Age)
plt.show()

x = df.drop('Outcome', axis = 1)
y = df['Outcome']

plt.figure(figsize =(25,30))
plotnumber = 1

for col in x.columns:
    if plotnumber <= 8:
        ax = plt.subplot(5, 5, plotnumber)
        sns.boxplot(x[col])
        plt.xlabel(col, fontsize = 15)

    plotnumber += 1
plt.tight_layout()
plt.show()

plt.figure(figsize =(25,30))
plotnumber = 1

for col in x.columns:
    if plotnumber <= 8:
        ax = plt.subplot(5, 5, plotnumber)
        sns.histplot(x[col])
        plt.xlabel(col, fontsize = 15)

    plotnumber += 1
plt.tight_layout()
plt.show()

plt.figure(figsize =(25,30))
plotnumber = 1

for col in x.columns:
    if plotnumber <= 8:
        ax = plt.subplot(5, 5, plotnumber)
        plt.pie(x[col])
        plt.xlabel(col, fontsize = 15)

    plotnumber += 1
plt.tight_layout()
plt.show()

df.isna().sum()

import missingno as msno

msno.bar(df)
plt.show()

x_train, x_test, y_train, y_test=train_test_split(x,y,test_size = 0.5, random_state=0)

st_x = StandardScaler()  
x_train= st_x.fit_transform(x_train)    
x_test= st_x.transform(x_test)

clf= DecisionTreeClassifier(criterion='entropy', random_state=0)  
clf.fit(x_train, y_train)

y_pred= clf.predict(x_test)

cm = confusion_matrix(y_test,y_pred)

cm

from sklearn import metrics

feature_cols = ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age']

from sklearn.tree import export_graphviz
from six import StringIO  
from IPython.display import Image  
import pydotplus

dot_data = StringIO()
export_graphviz(clf, out_file=dot_data,  
                filled=True, rounded=True,
                special_characters=True,feature_names = feature_cols,class_names=['0','1'])
graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  
graph.write_png('diabetes.png')
Image(graph.create_png())